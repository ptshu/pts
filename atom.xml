<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>菩提树</title>
  
  <subtitle>ptsh.gitee.io</subtitle>
  <link href="https://ptsh.gitee.io/atom.xml" rel="self"/>
  
  <link href="https://ptsh.gitee.io/"/>
  <updated>2023-11-03T06:16:13.430Z</updated>
  <id>https://ptsh.gitee.io/</id>
  
  <author>
    <name>菩提</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>部署Gitee的Git和Hexo</title>
    <link href="https://ptsh.gitee.io/2023/10/29/%E9%83%A8%E7%BD%B2Gitee%E7%9A%84Git%E5%92%8CHexo/"/>
    <id>https://ptsh.gitee.io/2023/10/29/%E9%83%A8%E7%BD%B2Gitee%E7%9A%84Git%E5%92%8CHexo/</id>
    <published>2023-10-29T11:58:41.000Z</published>
    <updated>2023-11-03T06:16:13.430Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HEXO博客信息"><a href="#HEXO博客信息" class="headerlink" title="HEXO博客信息"></a>HEXO博客信息</h1><p>博客仓库：<a href="https://gitee.com/ptsh/ptsh/">https://gitee.com/ptsh/ptsh/</a><br>备份仓库：<a href="https://gitee.com/ptsh/hexo/">https://gitee.com/ptsh/hexo/</a><br>博客域名：<a href="https://ptsh.gitee.io/">https://ptsh.gitee.io</a></p><span id="more"></span><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p>Hexo 基于 Node.js，搭建过程中还需要使用 npm（Node.js 已带） 和 git，因此先搭建本地操作环境，安装 Node.js 和 Git。<br>Node.js：<a href="https://nodejs.org/zh-cn">https://nodejs.org/zh-cn</a><br>Git：<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a><br>下载 Node.js 和 Git 程序并安装，一路点 “下一步” 按默认配置完成安装。</p><p>安装完成后，Win+R 输入 cmd 并打开，依次输入 <code>node -v、npm -v 和 git -v</code> 并回车，如下图出现程序版本号即可。<br> !(img&#x2F;hjdj.jpg)<br>码云官网:<a href="https://gitee.com/">https://gitee.com/</a></p><p>第二步：生成ssh公钥&#x2F;私钥对。</p><p>（1）先查看之前是否已经生成过公钥，私钥对。<br>打开文件夹 ： C:\Users\用户名.ssh</p><p>如果有上面三个文件，说明已经生成过。则不需要再生成。不需执行下面的步骤。可直接从下面的第（4）小步操作。</p><p>（2）配置Git的用户名，邮箱名。（注意这里的配置是对Git软件的配置只配置一次即可，第四步的远程仓库是对每个本地仓库的配置，也就是每创建一个git本地仓库都要配置）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;用户名（最好是gitee的用户名）&quot;</span><br><span class="line">git config --global user.email &quot;邮箱（gitee注册的邮箱）&quot;</span><br><span class="line">然后执行下面命令，查看是否配置成功</span><br><span class="line">git config --list</span><br><span class="line">出现配置的结果成功。</span><br><span class="line">注意：按字母键（Q）退出git config --list</span><br></pre></td></tr></table></figure><p>（3）执行生成密钥对命令。<br><code>ssh-keygen -t rsa -C &quot;邮箱&quot;</code></p><p>执行命令，并按回车3下（有提示你是否需要设置密码，所以直接回车跳过，如果设置了每次使用Git会提示输入密码）<br>然后去C:\Users\用户名.ssh文件夹下会有这三个文件</p><p>（4）打开id_rsa.pub的公钥文件，复制里面的内容</p><p>（5）打开Gitee的个人设置界面，点击左下方的ssh公钥：<br>粘贴公钥，填写标题，点击确定。</p><p>ssh登录整个详细过程介绍，可参考：<br><a href="https://www.jianshu.com/p/a3c3628d710b">https://www.jianshu.com/p/a3c3628d710b</a><br><a href="https://www.jianshu.com/p/9998d4d3ba04">https://www.jianshu.com/p/9998d4d3ba04</a><br><a href="https://blog.csdn.net/qq_23167527/article/details/80614454">https://blog.csdn.net/qq_23167527/article/details/80614454</a><br><a href="https://blog.csdn.net/weixin_42201180/article/details/117809437">https://blog.csdn.net/weixin_42201180/article/details/117809437</a></p><p>第三步：使用git推送到远程库。</p><p>（1）在gitee创建仓库</p><p>然后，按如下方式创建仓库：</p><p>（2）在当前工作目录打开cmd，初始化为git本地库。<br>这个工作目录是要推送的文件所在的文件夹。<br>使用命令(注意有个 .)：</p><p><code>git init .</code></p><p>(3)使用命令查看本地仓库git是否配置过远程仓库。</p><p><code>git remote -v</code></p><p>（4）没有配置过远程仓库。<br>打开上面Gitee创建的仓库，按照下图复制ssh地址。</p><p>然后，在cmd控制台添加远程仓库命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin &lt;你的项目地址&gt; </span><br><span class="line">//注:项目地址形式为:https://gitee.com/xxx/xxx.git或者 git@gitee.com:xxx/xxx.git</span><br><span class="line"></span><br><span class="line">已存在远程仓库，则修改远程仓库命令</span><br><span class="line">git remote set-url origin &lt;你的项目地址&gt;</span><br><span class="line">git remote set-url origin git@gitee.com:ptsh/hexo.git</span><br><span class="line">（项目ptsh存放hexo 博客，项目hexo存放hexo 源文件）</span><br></pre></td></tr></table></figure><p>（5）最后就是基本的推送命令了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line"></span><br><span class="line">git commit -m &quot;第一次提交&quot;</span><br><span class="line"></span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure><p>直接执行push命令会出问题：</p><p>因为gitee创建的和本地的不是同一个库，所以冲突。如果使用git clone不会出这个问题。可使用下面的命令解决：</p><p><code>git pull origin master --allow-unrelated-histories</code></p><p>然后再执行push命令：</p><p><code>git push origin master</code></p><p>这时执行上面push命令 如果还报错：</p><p>则再将本地的文件提交到本地仓库，再到远程仓库，即(orgin是添加在git 的远程仓库名， master是远程仓库当当前所在的分支）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m “ptshucn”</span><br><span class="line">git pull origin master --allow-unrelated-histories</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure><p>部署Hexo到Gitee<br>修改根目录_config.yml配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">type: git</span><br><span class="line">repo: git@gitee.com:ptsh/hexo.git （将地址换成自己的地址）</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure><p>然后在blog的根目录执行命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git –save # 安装git插件</span><br><span class="line"></span><br><span class="line">git config –global user.email zskang@qq.com # 设置gitee邮箱（gitee的注册邮箱）</span><br><span class="line"></span><br><span class="line">git config –global user.name ‘ptsh’ # 设置用户名（git的注册昵称）</span><br><span class="line"></span><br><span class="line">hexo deploy # 上传到gitee</span><br></pre></td></tr></table></figure><p>然后选择gitee pages服务，然后选择开启 或 更新即可。</p><p>网络教程：使用 Hexo+GitHub 搭建个人免费博客教程（小白向）<br><a href="https://zhuanlan.zhihu.com/p/60578464">https://zhuanlan.zhihu.com/p/60578464</a></p><h1 id="hexo常用命令"><a href="#hexo常用命令" class="headerlink" title="hexo常用命令"></a>hexo常用命令</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;name&quot;       # 新建文章</span><br><span class="line">hexo new page &quot;name&quot;  # 新建页面</span><br><span class="line">hexo g                # 生成页面</span><br><span class="line">hexo d                # 部署</span><br><span class="line">hexo g -d             # 生成页面并部署</span><br><span class="line">hexo s                # 本地预览</span><br><span class="line">hexo clean            # 清除缓存和已生成的静态文件</span><br><span class="line">hexo help             # 帮助</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;HEXO博客信息&quot;&gt;&lt;a href=&quot;#HEXO博客信息&quot; class=&quot;headerlink&quot; title=&quot;HEXO博客信息&quot;&gt;&lt;/a&gt;HEXO博客信息&lt;/h1&gt;&lt;p&gt;博客仓库：&lt;a href=&quot;https://gitee.com/ptsh/ptsh/&quot;&gt;https://gitee.com/ptsh/ptsh/&lt;/a&gt;&lt;br&gt;备份仓库：&lt;a href=&quot;https://gitee.com/ptsh/hexo/&quot;&gt;https://gitee.com/ptsh/hexo/&lt;/a&gt;&lt;br&gt;博客域名：&lt;a href=&quot;https://ptsh.gitee.io/&quot;&gt;https://ptsh.gitee.io&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="hexo" scheme="https://ptsh.gitee.io/categories/hexo/"/>
    
    <category term="Gitee" scheme="https://ptsh.gitee.io/categories/hexo/Gitee/"/>
    
    
  </entry>
  
  <entry>
    <title>MarkDown语法使用心得</title>
    <link href="https://ptsh.gitee.io/2023/10/02/MarkDown%E8%AF%AD%E6%B3%95%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/"/>
    <id>https://ptsh.gitee.io/2023/10/02/MarkDown%E8%AF%AD%E6%B3%95%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/</id>
    <published>2023-10-02T03:22:53.000Z</published>
    <updated>2023-11-02T11:53:57.766Z</updated>
    
    <content type="html"><![CDATA[<h1 id="标题："><a href="#标题：" class="headerlink" title="标题："></a>标题：</h1><p>在md格式下使用”#”来标记标题 ，有N个#时表示N级标题,N最大为6。（#后需要接一个空格） </p><h1 id="段落说明："><a href="#段落说明：" class="headerlink" title="段落说明："></a>段落说明：</h1><p>段落直接编写文字，没有特殊格式。<br>段落的换行是使用两个以上空格加上回车。<br>段落后面使用一个空行来表示重新开始一个段落。 </p><span id="more"></span><h1 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h1><p><code>语法格式：![alt 属性文本](图片地址)或![alt 属性文本](图片地址 &quot;可选标题&quot;)</code></p><h1 id="链接："><a href="#链接：" class="headerlink" title="链接："></a>链接：</h1><p><code>[链接名称](链接地址) 或 &lt;链接地址&gt;</code><br><a href="http://ptshu.cn/">菩提树</a><br><a href="http://ptshu.cn/">http://ptshu.cn/</a>  </p><h1 id="代码区块："><a href="#代码区块：" class="headerlink" title="代码区块："></a>代码区块：</h1><p>一行代码1个反引号表示<br>多行代码3个反引号表示  </p><h1 id="转义："><a href="#转义：" class="headerlink" title="转义："></a>转义：</h1><p><code>使用反斜杠转义特殊字符，如：\*\* 正常显示星号 \*\*</code>  </p><h1 id="分隔线："><a href="#分隔线：" class="headerlink" title="分隔线："></a>分隔线：</h1><p>可以在一行中用三个以上的星号、减号、底线来建立分隔线，行内不能有其他东西，也可以在星号或减号中间插入空格。 </p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;标题：&quot;&gt;&lt;a href=&quot;#标题：&quot; class=&quot;headerlink&quot; title=&quot;标题：&quot;&gt;&lt;/a&gt;标题：&lt;/h1&gt;&lt;p&gt;在md格式下使用”#”来标记标题 ，有N个#时表示N级标题,N最大为6。（#后需要接一个空格） &lt;/p&gt;
&lt;h1 id=&quot;段落说明：&quot;&gt;&lt;a href=&quot;#段落说明：&quot; class=&quot;headerlink&quot; title=&quot;段落说明：&quot;&gt;&lt;/a&gt;段落说明：&lt;/h1&gt;&lt;p&gt;段落直接编写文字，没有特殊格式。&lt;br&gt;段落的换行是使用两个以上空格加上回车。&lt;br&gt;段落后面使用一个空行来表示重新开始一个段落。 &lt;/p&gt;</summary>
    
    
    
    <category term="MarkDown" scheme="https://ptsh.gitee.io/categories/MarkDown/"/>
    
    
  </entry>
  
  <entry>
    <title>Hexo使用心得</title>
    <link href="https://ptsh.gitee.io/2022/12/11/Hexo%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/"/>
    <id>https://ptsh.gitee.io/2022/12/11/Hexo%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/</id>
    <published>2022-12-11T12:54:53.000Z</published>
    <updated>2023-11-02T13:26:05.110Z</updated>
    
    <content type="html"><![CDATA[<h1 id="hexo常用命令"><a href="#hexo常用命令" class="headerlink" title="hexo常用命令"></a>hexo常用命令</h1><p>hexo new “name”       # 新建文章<br>hexo new page “name”  # 新建页面<br>hexo g                # 生成页面<br>hexo d                # 部署<br>hexo g -d             # 生成页面并部署<br>hexo s                # 本地预览<br>hexo clean            # 清除缓存和已生成的静态文件<br>hexo help             # 帮助</p><span id="more"></span><h1 id="文件夹目录说明："><a href="#文件夹目录说明：" class="headerlink" title="文件夹目录说明："></a>文件夹目录说明：</h1><p>node_modules: 依赖包<br>public：存放生成的页面<br>scaffolds：生成文章的一些模板<br>source：用来存放你的文章<br>themes：主题<br>文件_config.yml: 博客的配置文件</p><h1 id="给文章添加分类和模板"><a href="#给文章添加分类和模板" class="headerlink" title="给文章添加分类和模板"></a>给文章添加分类和模板</h1><p>通过对文件头部配置信息中tags 与categories项的修改可以设置文章的标签及分类。<br>其中标签可以按格式贴现设置多个：<br>title: Hexo博客新建文章并发布 date: 2018-12-06 12:16:12 tags: - Hexo - Markdown categories: 搭建博客</p><h1 id="添加“阅读全文”按钮"><a href="#添加“阅读全文”按钮" class="headerlink" title="添加“阅读全文”按钮"></a>添加“阅读全文”按钮</h1><p>方法一：在文章任意你想添加的位置添加：<!--more--><br>此标签以下内容不展示在列表中，收起为阅读全文效果<br>方法二：设置首页文章以摘要形式显示，打开主题配置文件，找到auto_excerpt进行修改：<br>auto_excerpt:<br>enable: true<br>length: 150</p><h1 id="在博文中添加图片"><a href="#在博文中添加图片" class="headerlink" title="在博文中添加图片"></a>在博文中添加图片</h1><p>目前有二种方法像博文中添加图片：<br>方法一<br>(1)在hexo目录下，安装插件：<br>npm install hexo-asset-image –save<br>(2)在source 目录下新建一个img文件夹，把图片放置在里面；<br>(3)在xxx.md文件中引用图片：<code>![header]( img/header.jpg)</code><br>方法二：<br>(1)在全局配置文件（hexo&#x2F;_config.yml)中将post_asset_folder设置为true；<br>(2)创建文章（在创建的时候，会在hexo&#x2F;source&#x2F;_post目录下，生成一个XXX.md文件和一个XXX的文件夹）：<br>(3)把XXX这个博文需要展示的图片放在XXX文件夹目录下；<br>(4)在XXX.md文件中引入图片的方式：<code>&#123;% asset_img example.jpg This is an example image %&#125;</code></p><h1 id="博客菜单显示中文的设置方法："><a href="#博客菜单显示中文的设置方法：" class="headerlink" title="博客菜单显示中文的设置方法："></a>博客菜单显示中文的设置方法：</h1><p>1、在博客根目录的_config.yml文件中，找到language项改为zh-CN。<br>2、主题目录的_config.yml文件中，找到language项改为zh-CN。<br>注：部分主题的_config.yml文件中没有language项的设置。</p><h1 id="Hexo与Github的网络教程"><a href="#Hexo与Github的网络教程" class="headerlink" title="Hexo与Github的网络教程"></a>Hexo与Github的网络教程</h1><p>使用 Hexo+GitHub 搭建个人免费博客教程（小白向）<br><a href="https://zhuanlan.zhihu.com/p/60578464">https://zhuanlan.zhihu.com/p/60578464</a><br>5分钟快速 搭建免费好用的图床（Picx +github）<br><a href="https://blog.csdn.net/weixin_45701199/article/details/125801816">https://blog.csdn.net/weixin_45701199/article/details/125801816</a></p><!--more--><p>报错信息hexo YAMLException: can not read a block mapping entry; a multiline key may not be an implicit key<br>报错信息是提示hexo的yml配置文件 冒号后面少了空格<br>解决方案：到提示行将对应的空格补上即可<br><a href="https://blog.csdn.net/qq_39026548/article/details/104729964">https://blog.csdn.net/qq_39026548/article/details/104729964</a></p><p>Hexo使用攻略-添加分类及标签<br><a href="https://www.jianshu.com/p/e17711e44e00">https://www.jianshu.com/p/e17711e44e00</a></p><p>Hexo 改变 tag 因为大小写问题而 404 的解决方法<br><a href="https://blog.zhheo.com/p/5511910d.html">https://blog.zhheo.com/p/5511910d.html</a><br>hexo d 上传后about首字母变大写的原因：第一次上传时是大写，覆盖上传还就按第一次的大写写入。解决方法：把文件夹about重命名为其他（如：about2），hexo d 上传，然后再重命名回about，再hexo d 上传就完美解决了。</p><p>为你的Hexo加上评论系统-Valine<br><a href="https://blog.csdn.net/blue_zy/article/details/79071414">https://blog.csdn.net/blue_zy/article/details/79071414</a></p><p>GIT PULL 错误：[REMOTE REJECTED] MASTER -&gt; MASTER (PRE-RECEIVE HOOK DECLINED)<br>解决办法：关闭分支的保护机制<br><a href="https://www.freesion.com/article/7986556587/">https://www.freesion.com/article/7986556587/</a></p><h1 id="HEXO添加置顶功能"><a href="#HEXO添加置顶功能" class="headerlink" title="HEXO添加置顶功能"></a>HEXO添加置顶功能</h1><p>目前已经有修改后支持置顶的仓库，可以直接用以下命令安装。(cmd 到博客根目录，nmp运行)<br>$ npm uninstall hexo-generator-index<br>$ npm install hexo-generator-index-pin-top<br>然后在需要置顶的文章的Front-matter中加上top: true即可。</p><h2 id="比如下面这篇文章："><a href="#比如下面这篇文章：" class="headerlink" title="比如下面这篇文章："></a>比如下面这篇文章：</h2><p>title: hexo+GitHub博客搭建实战<br>date: 2017-09-08 12:00:25<br>categories: 博客搭建系列<br>top: true</p><hr><p>到目前为止，置顶功能已经可以实现了。</p><h1 id="node-modules瘦身方法"><a href="#node-modules瘦身方法" class="headerlink" title="node_modules瘦身方法"></a>node_modules瘦身方法</h1><p>首先，说明下node_modules文件夹的作用：下载了npm或gulp的一些插件后，打开node_modules可以发现，里面有很多的文件夹，会导致我们将项目拷贝给别人的时候，传输速度会很慢。在拷贝给别人项目的时候，node_modules这个文件夹是不需要一起拷贝的，因为有package.json、package-lock.json。<br>package.json记录当前项目所依赖模块的版本信息，更新模块时锁定模块的大版本号（版本号的第一位）。package-lock.json记录了node_modules目录下所有模块的具体来源和版本号以及其他的信息，就不做详细讲解了（相信写代码的一看就能大概明白），也可以参考：<a href="https://blog.csdn.net/qq_34295211/article/details/103858589">https://blog.csdn.net/qq_34295211/article/details/103858589</a><br>详细步骤如下：(初次尝试时 请先备份！请先备份！请先备份！)<br>npm install rimraf -g   &#x2F;&#x2F;安装rimraf工具<br>rimraf node_modules     &#x2F;&#x2F;使用rimraf删除node_modules文件<br>npm cache clean –force&#x2F;&#x2F;清除缓存<br>npm config set registry <a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org</a>&#x2F;&#x2F;设置国内镜像，防止下载缓慢卡住<br>npm  install&#x2F;&#x2F;初始化项目</p><p>每次上传项目至服务器备份时，删除node_modules文件夹，要修改项目时再重新初始化项目，安装依赖包。</p><p>另外，npm prune 命令的功能是根据package.json里的依赖项，删除不需要的模块文件。<br>执行npm audit fix，可以查看是否少了什么组件</p><h1 id="极狐GitLab与GitLab的区别"><a href="#极狐GitLab与GitLab的区别" class="headerlink" title="极狐GitLab与GitLab的区别"></a>极狐GitLab与GitLab的区别</h1><p>一、产品方面<br>GitLab 在全球范围内有三个版本：社区版（CE）、企业版（EE）、极狐版 (JH)。极狐GitLab（极狐版JH）是在中国大陆和港澳地区发行的企业级GitLab版本，拥有GitLab技术和品牌独家授权，基于GitLab EE和极狐(GitLab)持有独立知识产权的——JH代码仓库构建，由极狐(GitLab)公司在国内独立运营。<br>极狐GitLab支持私有化部署（self-managed）版本和SaaS服务。极狐GitLab的企业级订阅许可证、源代码管理、支付系统等均在中国境内管理，受中国法律保护。<br>二、代码及仓库管理方面<br>极狐(GitLab)公司与GitLab公司使用两个独立的代码仓，极狐(GitLab)的代码仓存放在中国境内。<br>GitLab社区版（CE）和企业版（EE）的更改将单向镜像到极狐发行版——极狐GitLab（JH），极狐GitLab版本的更改则会以社区贡献的形式反哺，通过GitLab维护者的审批后合并到GitLab。<br>三、SaaS 服务方面<br>极狐GitLab的SaaS服务和GitLab Inc.的SaaS服务（GitLab.com）不共享任何基础设施、网络连接、系统、服务、数据或资源。极狐(GitLab)作为一家独立的中国公司，将在国内管理自己的技术和基础设施。</p><h1 id="解决需要输入git-或者hexo-的用户名和密码"><a href="#解决需要输入git-或者hexo-的用户名和密码" class="headerlink" title="解决需要输入git(或者hexo)的用户名和密码"></a>解决需要输入git(或者hexo)的用户名和密码</h1><p>原因：是因为用 https 协议进行本地仓库和远程仓库的连接，https协议每次都需要进行用户验证，如下修改解决问题，换成ssh方式：<br>把<a href="https://gitee.com/ptsh/ptsh.git">https://gitee.com/ptsh/ptsh.git</a><br>改成<a href="mailto:&#x67;&#105;&#x74;&#64;&#103;&#x69;&#x74;&#101;&#x65;&#x2e;&#99;&#111;&#109;">&#x67;&#105;&#x74;&#64;&#103;&#x69;&#x74;&#101;&#x65;&#x2e;&#99;&#111;&#109;</a>:ptsh&#x2F;hexo.git<br>git:在cmd控制台添加或者修改远程仓库命令<br>添加：git remote add origin <a href="mailto:&#103;&#105;&#116;&#x40;&#x67;&#x69;&#116;&#x65;&#x65;&#x2e;&#x63;&#x6f;&#109;">&#103;&#105;&#116;&#x40;&#x67;&#x69;&#116;&#x65;&#x65;&#x2e;&#x63;&#x6f;&#109;</a>:ptsh&#x2F;hexo.git<br>修改：git remote set-url origin <a href="mailto:&#x67;&#105;&#116;&#x40;&#103;&#105;&#116;&#101;&#101;&#46;&#99;&#x6f;&#109;">&#x67;&#105;&#116;&#x40;&#103;&#105;&#116;&#101;&#101;&#46;&#99;&#x6f;&#109;</a>:ptsh&#x2F;hexo.git<br>hexo:修改根目录_config.yml配置</p><p>deploy:</p><p>type: git</p><p>repo: <a href="mailto:&#103;&#105;&#116;&#64;&#x67;&#105;&#116;&#x65;&#101;&#x2e;&#x63;&#x6f;&#109;">&#103;&#105;&#116;&#64;&#x67;&#105;&#116;&#x65;&#101;&#x2e;&#x63;&#x6f;&#109;</a>:ptsh&#x2F;hexo.git （将地址换成自己的地址）</p><p>branch: master</p><p>更改完远程仓库链接，第一次使用Git的clone或者push命令连接Gitee时，会得到一个警告。<br>这是因为Git使用SSH连接，而SSH连接在第一次验证Gitee服务器的Key时，需要你确认Gitee的Key的指纹信息是否真的来自Gitee的服务器，输入yes回车即可。Git会输出一个警告，告诉你已经把Gitee的Key添加到本机的一个信任列表里了：这个警告只会出现一次，后面的操作就不会有任何警告了。</p><h1 id="Valine禁止某页面评论"><a href="#Valine禁止某页面评论" class="headerlink" title="Valine禁止某页面评论"></a>Valine禁止某页面评论</h1><h2 id="在-Hexo-博客中，评论的功能在所有页面都默认开启，但是有的时候我们在页面上不需要显示评论功能，例如分类，标记页面我们并不需要评论功能。通过comments属性设置true或false控制该页面或者是文章的评论功能是否打开，如下："><a href="#在-Hexo-博客中，评论的功能在所有页面都默认开启，但是有的时候我们在页面上不需要显示评论功能，例如分类，标记页面我们并不需要评论功能。通过comments属性设置true或false控制该页面或者是文章的评论功能是否打开，如下：" class="headerlink" title="在 Hexo 博客中，评论的功能在所有页面都默认开启，但是有的时候我们在页面上不需要显示评论功能，例如分类，标记页面我们并不需要评论功能。通过comments属性设置true或false控制该页面或者是文章的评论功能是否打开，如下："></a>在 Hexo 博客中，评论的功能在所有页面都默认开启，但是有的时候我们在页面上不需要显示评论功能，例如分类，标记页面我们并不需要评论功能。通过comments属性设置true或false控制该页面或者是文章的评论功能是否打开，如下：</h2><p>title: Tags<br>date: 2019-12-19 16:10:19<br>type: “tags”<br>comments: false</p><hr><h1 id="使用git-add-报错"><a href="#使用git-add-报错" class="headerlink" title="使用git add 报错"></a>使用git add 报错</h1><p>提示错误信息(warning)，报错：<br>    warning: LF will be replaced by CRLF in.idea&#x2F;inspectionProfiles&#x2F;profiles_settings.xml.<br>    The file will have its original line endings in your working directory<br>解决方法：<br>执行git add . 命令之前先执行 以下命令，可成功解决<br>git config core.autocrlf</p><h1 id="静态HTML网页部署到github-x2F-gitee后中文乱码"><a href="#静态HTML网页部署到github-x2F-gitee后中文乱码" class="headerlink" title="静态HTML网页部署到github&#x2F;gitee后中文乱码"></a>静态HTML网页部署到github&#x2F;gitee后中文乱码</h1><p>解决方法如下：<br>1、将html文件用记事本方式打开<br>2、html设置编码utf8的方法：首先打开HTML文件；然后在head之间添加语句<br><code>&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;</code><br>即可。<br>3、点击另存为，跳出另存为界面，最下方有编码选项，选择“UTF-8”，将html文件保存（或直接存为原文件后选替换） </p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;hexo常用命令&quot;&gt;&lt;a href=&quot;#hexo常用命令&quot; class=&quot;headerlink&quot; title=&quot;hexo常用命令&quot;&gt;&lt;/a&gt;hexo常用命令&lt;/h1&gt;&lt;p&gt;hexo new “name”       # 新建文章&lt;br&gt;hexo new page “name”  # 新建页面&lt;br&gt;hexo g                # 生成页面&lt;br&gt;hexo d                # 部署&lt;br&gt;hexo g -d             # 生成页面并部署&lt;br&gt;hexo s                # 本地预览&lt;br&gt;hexo clean            # 清除缓存和已生成的静态文件&lt;br&gt;hexo help             # 帮助&lt;/p&gt;</summary>
    
    
    
    <category term="hexo" scheme="https://ptsh.gitee.io/categories/hexo/"/>
    
    <category term="Git" scheme="https://ptsh.gitee.io/categories/hexo/Git/"/>
    
    
  </entry>
  
  <entry>
    <title>使用Hexo+GitHub搭建博客（问题）</title>
    <link href="https://ptsh.gitee.io/2022/12/02/%E4%BD%BF%E7%94%A8Hexo+GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E9%97%AE%E9%A2%98%EF%BC%89/"/>
    <id>https://ptsh.gitee.io/2022/12/02/%E4%BD%BF%E7%94%A8Hexo+GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E9%97%AE%E9%A2%98%EF%BC%89/</id>
    <published>2022-12-02T11:58:41.000Z</published>
    <updated>2023-11-02T11:46:35.301Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HEXO博客信息"><a href="#HEXO博客信息" class="headerlink" title="HEXO博客信息"></a>HEXO博客信息</h1><p>博客仓库名：ptshu.github.io<br>备份仓库名：hexo<br>管理地址：<a href="https://github.com/ptshu/">https://github.com/ptshu/</a></p><h1 id="Hexo连接-Github-博客"><a href="#Hexo连接-Github-博客" class="headerlink" title="Hexo连接 Github(博客)"></a>Hexo连接 Github(博客)</h1><span id="more"></span><p>设置用户名和邮箱：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;ptshu&quot;</span><br><span class="line">git config --global user.email &quot;zskang@qq.com&quot;</span><br></pre></td></tr></table></figure><p>创建 SSH 密匙：<br>(如果已经创建了，可以跳过直接用户旧的密匙)<br><code>ssh-keygen -t rsa -C  &quot;zskang@qq.com&quot;</code><br>验证连接：<br><code>ssh -T git@github.com</code></p><h1 id="Git连接-Github-备份"><a href="#Git连接-Github-备份" class="headerlink" title="Git连接 Github(备份)"></a>Git连接 Github(备份)</h1><p>设置用户名、邮箱和仓库：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;ptshu&quot;</span><br><span class="line">git config --global user.email &quot;zskang@qq.com&quot;</span><br><span class="line">第一次关联仓库</span><br><span class="line">git remote add origin https://ghp_YtdiutIzUSJw1aBftZmD和谐一下TGBQROg3Rh3pLH24@github.com/ptshu/hexo.git</span><br><span class="line">或修改关联仓库</span><br><span class="line">git remote set-url origin https://ghp_YtdiutIzUSJw1aBftZmD和谐一下TGBQROg3Rh3pLH24@github.com/ptshu/hexo.git</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>上传命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &quot;新备份&quot;</span><br><span class="line">git pull --rebase origin master    //本地与远程版本不一致（如远程上删减或修改文件），需要先用此命令合并</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure><h1 id="其他常用命令："><a href="#其他常用命令：" class="headerlink" title="其他常用命令："></a>其他常用命令：</h1><p>查看当前git的配置<br><code>git config -l </code></p><h1 id="github用户申请专属token-个人令牌"><a href="#github用户申请专属token-个人令牌" class="headerlink" title="github用户申请专属token(个人令牌)"></a>github用户申请专属token(个人令牌)</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Settings =&gt; Developer Settings =&gt; Personal access tokens</span><br><span class="line">如：</span><br><span class="line">git-to-hexo@token</span><br><span class="line">ghp_YtdiutIzUSJw1aBftZmD和谐一下TGBQROg3Rh3pLH24</span><br><span class="line">picx@token</span><br><span class="line">ghp_ObXvJO6jrjhHcMhI和谐一下Ug8UeT9y210ZJN3O2sPM</span><br></pre></td></tr></table></figure><h1 id="Github添加密匙："><a href="#Github添加密匙：" class="headerlink" title="Github添加密匙："></a>Github添加密匙：</h1><p>进入 [C:\Users\用户名.ssh] 目录（要勾选显示“隐藏的项目”），用记事本打开公钥 id_rsa.pub 文件并复制里面的内容。</p><p>登陆 GitHub ，进入 Settings 页面，选择左边栏的 SSH and GPG keys，点击 New SSH key。</p><p>Title 随便取个名字，粘贴复制的 id_rsa.pub 内容到 Key 中，点击 Add SSH key 完成添加。</p><p>验证连接：</p><p>打开 Git Bash，输入 <code>ssh -T git@github.com</code> 出现 “Are you sure……”，输入 yes 回车确认。</p><p>显示 “Hi xxx! You’ve successfully……” 即连接成功。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;HEXO博客信息&quot;&gt;&lt;a href=&quot;#HEXO博客信息&quot; class=&quot;headerlink&quot; title=&quot;HEXO博客信息&quot;&gt;&lt;/a&gt;HEXO博客信息&lt;/h1&gt;&lt;p&gt;博客仓库名：ptshu.github.io&lt;br&gt;备份仓库名：hexo&lt;br&gt;管理地址：&lt;a href=&quot;https://github.com/ptshu/&quot;&gt;https://github.com/ptshu/&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;Hexo连接-Github-博客&quot;&gt;&lt;a href=&quot;#Hexo连接-Github-博客&quot; class=&quot;headerlink&quot; title=&quot;Hexo连接 Github(博客)&quot;&gt;&lt;/a&gt;Hexo连接 Github(博客)&lt;/h1&gt;</summary>
    
    
    
    <category term="hexo" scheme="https://ptsh.gitee.io/categories/hexo/"/>
    
    <category term="GitHub" scheme="https://ptsh.gitee.io/categories/hexo/GitHub/"/>
    
    
  </entry>
  
</feed>
