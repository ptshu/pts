<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>菩提树</title>
  
  <subtitle>www.ptsh.cf</subtitle>
  <link href="https://www.ptsh.cf/atom.xml" rel="self"/>
  
  <link href="https://www.ptsh.cf/"/>
  <updated>2022-10-19T08:07:00.365Z</updated>
  <id>https://www.ptsh.cf/</id>
  
  <author>
    <name>菩提</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用Git连接Gitee</title>
    <link href="https://www.ptsh.cf/2022/10/19/%E4%BD%BF%E7%94%A8Git%E8%BF%9E%E6%8E%A5Gitee/"/>
    <id>https://www.ptsh.cf/2022/10/19/%E4%BD%BF%E7%94%A8Git%E8%BF%9E%E6%8E%A5Gitee/</id>
    <published>2022-10-19T08:03:27.000Z</published>
    <updated>2022-10-19T08:07:00.365Z</updated>
    
    <content type="html"><![CDATA[<p>内容来源：<a href="https://blog.csdn.net/qq_45860901/article/details/125473713">https://blog.csdn.net/qq_45860901/article/details/125473713</a></p><p>从远程仓库下载到本地<br><code>git clone https://gitee.com/ptsh/ptsh.git</code><br>或<br><code>git clone git@gitee.com:ptsh/ptsh.git</code></p><span id="more"></span><p>配置Git的用户名，邮箱名，添加远程仓库命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email &quot;zskang@qq.com&quot;</span><br><span class="line">git config --global user.name &quot;ptcn&quot;</span><br><span class="line">git remote add origin git@gitee.com:ptsh/ptsh.git</span><br><span class="line">或</span><br><span class="line">git remote set-url origin git@gitee.com:ptsh/ptsh.git</span><br></pre></td></tr></table></figure><p>生成ssh公钥</p><p>确认连接成功<br>输入 <code>ssh -T git@gitee.com</code> 出现 “You’ve successfully authenticated”。</p><p>使用git推送到远程库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &quot;第一次提交&quot;</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure><p>gitee传入公钥以后每次push依然需要输入密码<br>使用gitee创建仓库后，linux环境，执行：</p><p><code>git clone https://gitee.com/*****.git </code><br>之后每次 git pull 或git push 都提示需要输入Username,Passwd</p><p>但是本地也执行了全局配置用户名 邮箱，并且也创建并上传添加了SSH公钥 。</p><p>为什么呢？？ </p><p>这时仔细翻看发现在添加公钥时有个这个提示：</p><p>使用SSH公钥可以让你在你的电脑和 Gitee 通讯的时候使用安全连接（Git的Remote要使用SSH地址）</p><p>所以，根本原因是 clone时 用的地址不对，应该是用SSH地址。</p><p>如果项目不大 删除目录重新执行：</p><p><code>git clone git@gitee.com:******.git</code></p><p>如果已经clone并且项目比较大那修改配置的Remote地址为SSH地址就好了</p><p><code>git remote set-url origin git@gitee.com:******.git</code></p><p>此时再进行push 和pull 时就不需要再输入用户和密码了。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;内容来源：&lt;a href=&quot;https://blog.csdn.net/qq_45860901/article/details/125473713&quot;&gt;https://blog.csdn.net/qq_45860901/article/details/125473713&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;从远程仓库下载到本地&lt;br&gt;&lt;code&gt;git clone https://gitee.com/ptsh/ptsh.git&lt;/code&gt;&lt;br&gt;或&lt;br&gt;&lt;code&gt;git clone git@gitee.com:ptsh/ptsh.git&lt;/code&gt;&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>浏览器默认页面设置为空白页</title>
    <link href="https://www.ptsh.cf/2022/10/13/%E6%B5%8F%E8%A7%88%E5%99%A8%E9%BB%98%E8%AE%A4%E9%A1%B5%E9%9D%A2%E8%AE%BE%E7%BD%AE%E4%B8%BA%E7%A9%BA%E7%99%BD%E9%A1%B5/"/>
    <id>https://www.ptsh.cf/2022/10/13/%E6%B5%8F%E8%A7%88%E5%99%A8%E9%BB%98%E8%AE%A4%E9%A1%B5%E9%9D%A2%E8%AE%BE%E7%BD%AE%E4%B8%BA%E7%A9%BA%E7%99%BD%E9%A1%B5/</id>
    <published>2022-10-13T02:33:17.000Z</published>
    <updated>2022-10-13T02:36:04.423Z</updated>
    
    <content type="html"><![CDATA[<p>什么是浏览器默认页面？<br>当您打开浏览器时，您通常会看到浏览器的搜索页面以及一些您最常使用的网站。这很棒，特别是如果搜索引擎是您在打开浏览器时使用的第一个工具。但是，如果您总是需要检查一个站点，则设置浏览器默认页面将更适合您。它可以是您工作的 Skype、您最喜欢的新闻公司的网站、社交媒体等等。</p><span id="more"></span><p>什么是关于空白页？<br>当您打开浏览器时看到一个空白页面可能会令人担忧。关于空白页面可能是由于不同的原因造成的。这可能是由于病毒或恶意软件攻击、恶意软件或广告软件的突然删除、代码和浏览器中的错误、页面缓存损坏、弹出广告被阻止、互联网连接不良以及其他浏览器无法解决的潜在问题造成的展示。值得注意的是，它也可以由不想打开他们以前访问过的浏览器或他们经常使用的网站的用户自愿设置。如果您要注意隐私，这可能会有所帮助。</p><p>如何设置浏览器默认页面和关于空白页面？<br>如前所述，您可以选择使用浏览器默认页面或“关于空白”页面来启动浏览器。执行它们的过程只会因您使用的浏览器而异。以下是您可以在四种主要网络浏览器上执行这些操作的方法：</p><p>谷歌浏览器<br>浏览器默认页面</p><p>启动谷歌 Chrome浏览器。</p><p>单击浏览器菜单，这是您的个人资料旁边的个人资料图标旁边的三个垂直点的形式。</p><p>单击设置。</p><p>单击On Startup部分，您将看到三个选项：打开新标签页、从上次中断的地方继续，以及打开特定页面 或一组页面。选择适合您偏好的那一款。</p><p>空白页</p><p>重复该过程并选择打开特定页面或一组页面。</p><p>单击添加新页面并输入“about:blank”作为 URL。</p><p>关闭 Chrome 浏览器并重新启动计算机以应用更改。</p><p>火狐浏览器<br>浏览器默认页面</p><p>启动Mozilla Firefox浏览器。</p><p>单击浏览器菜单。</p><p>单击设置</p><p>转到主页选项卡。</p><p>使用主页和新窗口旁边的下拉菜单并从三个选项中进行选择：Firefox 主页（默认）、自定义 URL 或空白页面。</p><p>空白页</p><p>执行相同的过程，然后从主页和新窗口旁边的下拉菜单中选择空白页。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;什么是浏览器默认页面？&lt;br&gt;当您打开浏览器时，您通常会看到浏览器的搜索页面以及一些您最常使用的网站。这很棒，特别是如果搜索引擎是您在打开浏览器时使用的第一个工具。但是，如果您总是需要检查一个站点，则设置浏览器默认页面将更适合您。它可以是您工作的 Skype、您最喜欢的新闻公司的网站、社交媒体等等。&lt;/p&gt;</summary>
    
    
    
    <category term="智能网络" scheme="https://www.ptsh.cf/categories/%E6%99%BA%E8%83%BD%E7%BD%91%E7%BB%9C/"/>
    
    
    <category term="空白页" scheme="https://www.ptsh.cf/tags/%E7%A9%BA%E7%99%BD%E9%A1%B5/"/>
    
  </entry>
  
  <entry>
    <title>极狐GitLab与GitLab的区别</title>
    <link href="https://www.ptsh.cf/2022/10/13/%E6%9E%81%E7%8B%90GitLab%E4%B8%8EGitLab%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>https://www.ptsh.cf/2022/10/13/%E6%9E%81%E7%8B%90GitLab%E4%B8%8EGitLab%E7%9A%84%E5%8C%BA%E5%88%AB/</id>
    <published>2022-10-13T02:25:06.000Z</published>
    <updated>2022-10-13T02:42:27.516Z</updated>
    
    <content type="html"><![CDATA[<p>一、产品方面<br>GitLab 在全球范围内有三个版本：社区版（CE）、企业版（EE）、极狐版 (JH)。极狐GitLab（极狐版JH）是在中国大陆和港澳地区发行的企业级GitLab版本，拥有GitLab技术和品牌独家授权，基于GitLab EE和极狐(GitLab)持有独立知识产权的——JH代码仓库构建，由极狐(GitLab)公司在国内独立运营。</p><span id="more"></span><p>极狐GitLab支持私有化部署（self-managed）版本和SaaS服务。极狐GitLab的企业级订阅许可证、源代码管理、支付系统等均在中国境内管理，受中国法律保护。<br>二、代码及仓库管理方面<br>极狐(GitLab)公司与GitLab公司使用两个独立的代码仓，极狐(GitLab)的代码仓存放在中国境内。<br>GitLab社区版（CE）和企业版（EE）的更改将单向镜像到极狐发行版——极狐GitLab（JH），极狐GitLab版本的更改则会以社区贡献的形式反哺，通过GitLab维护者的审批后合并到GitLab。<br>三、SaaS 服务方面<br>极狐GitLab的SaaS服务和GitLab Inc.的SaaS服务（GitLab.com）不共享任何基础设施、网络连接、系统、服务、数据或资源。极狐(GitLab)作为一家独立的中国公司，将在国内管理自己的技术和基础设施。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;一、产品方面&lt;br&gt;GitLab 在全球范围内有三个版本：社区版（CE）、企业版（EE）、极狐版 (JH)。极狐GitLab（极狐版JH）是在中国大陆和港澳地区发行的企业级GitLab版本，拥有GitLab技术和品牌独家授权，基于GitLab EE和极狐(GitLab)持有独立知识产权的——JH代码仓库构建，由极狐(GitLab)公司在国内独立运营。&lt;/p&gt;</summary>
    
    
    
    <category term="智能网络" scheme="https://www.ptsh.cf/categories/%E6%99%BA%E8%83%BD%E7%BD%91%E7%BB%9C/"/>
    
    
  </entry>
  
  <entry>
    <title>git常用命令</title>
    <link href="https://www.ptsh.cf/2022/09/29/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>https://www.ptsh.cf/2022/09/29/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</id>
    <published>2022-09-29T13:09:23.000Z</published>
    <updated>2022-10-13T02:50:02.782Z</updated>
    
    <content type="html"><![CDATA[<h1 id="配置github用户信息"><a href="#配置github用户信息" class="headerlink" title="配置github用户信息"></a>配置github用户信息</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email &quot;zskang@qq.com&quot;</span><br><span class="line">git config --global user.name &quot;ptshu&quot;</span><br></pre></td></tr></table></figure><span id="more"></span><h1 id="配置远程仓库位置"><a href="#配置远程仓库位置" class="headerlink" title="配置远程仓库位置"></a>配置远程仓库位置</h1><p>  <code>git remote add origin https://&lt;your_token&gt;@github.com/&lt;USERNAME&gt;/&lt;REPO&gt;.git</code>   &#x2F;&#x2F;第一次添加配置<br>或者<br>  <code>git remote set-url origin https://&lt;your_token&gt;@github.com/&lt;USERNAME&gt;/&lt;REPO&gt;.git</code>   &#x2F;&#x2F;已存在而再次更改配置<br>  <code>git remote set-url origin https://ghp_W42ArMmNdN9PROqD和谐一下2ZAFRaWXGwCyiY0l95jI@github.com/ptshu/hexo.git</code></p><h1 id="上传更改文件"><a href="#上传更改文件" class="headerlink" title="上传更改文件"></a>上传更改文件</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &quot;信息&quot;</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><p>注意:第一次push用”git push -u origin master”<br>git push -u origin master 是将本地的master分支推送到origin主机，同时指定origin为默认主机，后面就可以不加任何参数使用git push了。<br>git push origin master 是上传本地当前分支代码到master分支。<br>git push 是上传本地所有分支代码到远程对应的分支上。</p><h1 id="git报错-fatal-unsafe-repository"><a href="#git报错-fatal-unsafe-repository" class="headerlink" title="git报错 fatal: unsafe repository"></a>git报错 fatal: unsafe repository</h1><p>可以：<br><code>git config --global --add safe.directory /目录</code><br>解决思路：<br>按提示执行确实可以短暂避免该问题，但治标不治本，且文件很多时需要一个个敲命令。<br>产生这一问题的本质原因是下载代码的所有权没有转移，即你下载了别人的代码，别人声明该代码所有权。所以，在修改代码时会报以上问题。因此，我们需要做的并不是声称哪目录是安全的，而是要将代码所有权转移。<br>我所查的大部分解决方案即：<br><code>git config --global --add safe.directory &quot;*&quot;</code></p><h1 id="rejected-master-gt-master-fetch-first-问题的解决方案"><a href="#rejected-master-gt-master-fetch-first-问题的解决方案" class="headerlink" title="! [rejected] master -&gt; master (fetch first)问题的解决方案"></a>! [rejected] master -&gt; master (fetch first)问题的解决方案</h1><p>温柔解决法：<br>1.通过git pull 先将本地库更新到与远程库一致的版本，但要注意本地库后来做的修改可能被覆盖，最好使用git fetch(不会自动合并)，查看更新情况再有选择合并，或者先将本地库修改过的文件备份，git pull后再重新修改；</p><p>2.再运行git push即可成功。</p><p>暴力解决法：<br>强制上传方式： git push -f<br>它会忽略版本不一致等问题，谨慎使用，因为会覆盖远程仓库，如果远程仓库有更新或者同伴有修改，会被覆盖掉。</p><h1 id="GitHub个人访问令牌会自行删除的原因："><a href="#GitHub个人访问令牌会自行删除的原因：" class="headerlink" title="GitHub个人访问令牌会自行删除的原因："></a>GitHub个人访问令牌会自行删除的原因：</h1><p>您可能会将令牌提交到您的 GitHub 存储库。如果是这种情况，Github 将立即删除令牌。因此您需要将令牌设置为系统中的变量环境。</p><h1 id="修改本地分支名称"><a href="#修改本地分支名称" class="headerlink" title="修改本地分支名称"></a>修改本地分支名称</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> git branch -m oldBranchName newBranchName</span><br><span class="line">git branch -m gh-pages master</span><br></pre></td></tr></table></figure><h1 id="git-pull命令"><a href="#git-pull命令" class="headerlink" title="git pull命令"></a>git pull命令</h1><p><a href="https://www.yiibai.com/git/git_pull.html">https://www.yiibai.com/git/git_pull.html</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;配置github用户信息&quot;&gt;&lt;a href=&quot;#配置github用户信息&quot; class=&quot;headerlink&quot; title=&quot;配置github用户信息&quot;&gt;&lt;/a&gt;配置github用户信息&lt;/h1&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git config --global user.email &amp;quot;zskang@qq.com&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git config --global user.name &amp;quot;ptshu&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Git与Hexo" scheme="https://www.ptsh.cf/categories/Git%E4%B8%8EHexo/"/>
    
    
  </entry>
  
  <entry>
    <title>Markdown的基本语法</title>
    <link href="https://www.ptsh.cf/2022/09/08/Markdown%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
    <id>https://www.ptsh.cf/2022/09/08/Markdown%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</id>
    <published>2022-09-08T08:44:27.000Z</published>
    <updated>2022-10-13T02:41:23.294Z</updated>
    
    <content type="html"><![CDATA[<p>学习来源：<br><a href="https://blog.csdn.net/qq_40818172/article/details/126260661?spm=1001.2101.3001.6650.3&amp;utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-3-126260661-blog-50911365.pc_relevant_default&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-3-126260661-blog-50911365.pc_relevant_default&amp;utm_relevant_index=6">https://blog.csdn.net/qq_40818172/article/details/126260661?spm=1001.2101.3001.6650.3&amp;utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-3-126260661-blog-50911365.pc_relevant_default&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-3-126260661-blog-50911365.pc_relevant_default&amp;utm_relevant_index=6</a></p><h1 id="1-标题"><a href="#1-标题" class="headerlink" title="1 标题"></a>1 标题</h1><p>使用#号标记，可以表示1-6级标题， 随#的个数递增，一级标题字号最大，六级标题字号最小。<br>代码如下：</p><span id="more"></span><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure><p>效果：</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h1 id="2-字体"><a href="#2-字体" class="headerlink" title="2 字体"></a>2 字体</h1><p>星号与下划线都可以，单是斜体，双是粗体，三是粗斜体</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">*这是斜体*</span><br><span class="line">_这是斜体_</span><br><span class="line">**这是粗体**</span><br><span class="line">__这是粗体__</span><br><span class="line">***这是粗斜体***</span><br><span class="line">___这是粗斜体___</span><br></pre></td></tr></table></figure><p>效果：<br><em>这是斜体</em><br><em>这是斜体</em><br><strong>这是粗体</strong><br><strong>这是粗体</strong><br><em><strong>这是粗斜体</strong></em><br><em><strong>这是粗斜体</strong></em></p><h1 id="3-引用"><a href="#3-引用" class="headerlink" title="3 引用"></a>3 引用</h1><p>Markdown 中引用通过符号 &gt; 来实现。&gt; 符号后的空格，可有可无。<br>在引用的区块内，允许换行存在，换行并不会终止引用的区块。如果要结束引用，需要一行空白行，来结束引用的区块，<br>此外，引用还可以嵌套使用。<br>代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;这是一个引用：</span><br><span class="line">&gt;&gt;这是一个引用的引用</span><br><span class="line">&gt;&gt;&gt;这是一个引用的引用的引用</span><br></pre></td></tr></table></figure><p>效果：</p><blockquote><p>这是一个引用：</p><blockquote><p>这是一个引用的引用</p><blockquote><p>这是一个引用的引用的引用</p></blockquote></blockquote></blockquote><h1 id="4-链接"><a href="#4-链接" class="headerlink" title="4 链接"></a>4 链接</h1><p>Markdown中插入链接的使用方式是：<br>代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">效果：</span><br><span class="line">[这是菩提的主页](http://www.ptshu.cn)</span><br><span class="line">&lt;http://www.ptshu.cn&gt;</span><br><span class="line">http://www.ptshu.cn</span><br></pre></td></tr></table></figure><p><a href="http://www.ptshu.cn/">这是菩提的主页</a><br><a href="http://www.ptshu.cn/">http://www.ptshu.cn</a><br><a href="http://www.ptshu.cn/">http://www.ptshu.cn</a></p><h1 id="5-图片"><a href="#5-图片" class="headerlink" title="5 图片"></a>5 图片</h1><p>Markdown中插入图片的使用方式是：<br>代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">![图片描述，可写可不写，但是中括号要有](图片地址，本地链接或者URL地址。)</span><br><span class="line"></span><br><span class="line">![菩提的头像](https://www.ptsh.cf/themeauthor.jpg)</span><br></pre></td></tr></table></figure><p>效果：<br><img src="https://www.ptsh.cf/themeauthor.jpg" alt="菩提的头像"></p><h1 id="6-列表"><a href="#6-列表" class="headerlink" title="6 列表"></a>6 列表</h1><p>列表分为有序列表和无序列表</p><p>无序列表，使用<code>*</code>、<code>+</code>、<code>-</code>，再加一个空格作为列表的标记<br>有序列表，使用数字并加上<code>.</code>号，再加一个空格作为列表的标记<br>代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">* 无序列表 1</span><br><span class="line">+ 无序列表 2</span><br><span class="line">- 无序列表 3</span><br><span class="line"></span><br><span class="line">1. 有序列表 1</span><br><span class="line">2. 有序列表 2</span><br><span class="line">3. 有序列表 3</span><br></pre></td></tr></table></figure><p>效果：</p><ul><li>无序列表 1</li></ul><ul><li>无序列表 2</li></ul><ul><li>无序列表 3</li></ul><ol><li>有序列表 1</li><li>有序列表 2</li><li>有序列表 3</li></ol><p>如果想要控制列表的层级，则需要在列表符号前使用<code>Tab</code><br>代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">+ 无序列表 1</span><br><span class="line">+ 无序列表 2</span><br><span class="line">+ 无序列表 2.1</span><br><span class="line">+ 无序列表 2.2</span><br><span class="line"></span><br><span class="line">1. 有序列表 1</span><br><span class="line">1.1 有序列表 1.1</span><br><span class="line">2. 有序列表 2</span><br><span class="line">2.1 有序列表2.1</span><br></pre></td></tr></table></figure><p>效果：</p><ul><li>无序列表 1</li><li>无序列表 2<ul><li>无序列表 2.1</li><li>无序列表 2.2</li></ul></li></ul><ol><li>有序列表 1<br> 1.1 有序列表 1.1</li><li>有序列表 2<br> 2.1 有序列表2.1</li></ol><h1 id="7-代码块"><a href="#7-代码块" class="headerlink" title="7  代码块"></a>7  代码块</h1><p>Markdown中代码块有两种：<br>如果在一行内需要引用代码，只需要用反引号&#96;引起来就好了。<br>代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`Hello` World.</span><br></pre></td></tr></table></figure><p>效果：<br><code>Hello</code> World.</p><p>如果是在一个块内需要引用代码，则在需要引用的代码块的前一行和后一行使用三个反引号，同时在前一个反引号后写入代码的语言。<br>代码：<br><img src="https://cdn.staticaly.com/gh/ptshu/image@master/20220913/dm.137edmxekgj4.png"></p><p>效果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">int main()&#123;</span><br><span class="line">   printf(&quot;HelloWorld&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;学习来源：&lt;br&gt;&lt;a href=&quot;https://blog.csdn.net/qq_40818172/article/details/126260661?spm=1001.2101.3001.6650.3&amp;amp;utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-3-126260661-blog-50911365.pc_relevant_default&amp;amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-3-126260661-blog-50911365.pc_relevant_default&amp;amp;utm_relevant_index=6&quot;&gt;https://blog.csdn.net/qq_40818172/article/details/126260661?spm=1001.2101.3001.6650.3&amp;amp;utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-3-126260661-blog-50911365.pc_relevant_default&amp;amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-3-126260661-blog-50911365.pc_relevant_default&amp;amp;utm_relevant_index=6&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;1-标题&quot;&gt;&lt;a href=&quot;#1-标题&quot; class=&quot;headerlink&quot; title=&quot;1 标题&quot;&gt;&lt;/a&gt;1 标题&lt;/h1&gt;&lt;p&gt;使用#号标记，可以表示1-6级标题， 随#的个数递增，一级标题字号最大，六级标题字号最小。&lt;br&gt;代码如下：&lt;/p&gt;</summary>
    
    
    
    <category term="Git与Hexo" scheme="https://www.ptsh.cf/categories/Git%E4%B8%8EHexo/"/>
    
    
  </entry>
  
  <entry>
    <title>Hexo 的Github与Gitee连接</title>
    <link href="https://www.ptsh.cf/2022/08/19/Github%E4%B8%8EGitee%E7%9A%84%E8%BF%9E%E6%8E%A5/"/>
    <id>https://www.ptsh.cf/2022/08/19/Github%E4%B8%8EGitee%E7%9A%84%E8%BF%9E%E6%8E%A5/</id>
    <published>2022-08-19T13:39:46.000Z</published>
    <updated>2022-10-13T02:40:07.282Z</updated>
    
    <content type="html"><![CDATA[<h1 id="连接-Github"><a href="#连接-Github" class="headerlink" title="连接 Github"></a>连接 Github</h1><p>右键 -&gt; <code>Git Bash Here</code>，设置用户名和邮箱：<br><code>git config --global user.name &quot;GitHub 用户名&quot;</code><br><code>git config --global user.email &quot;GitHub 邮箱&quot;</code><br>创建 SSH 密匙：<br>输入 <code>ssh-keygen -t rsa -C &quot;GitHub 邮箱&quot;</code>，然后一路回车。</p><span id="more"></span><p>添加密匙：</p><p>进入<code> [C:\Users\用户名\.ssh]</code> 目录（要勾选显示“隐藏的项目”），用记事本打开公钥 id_rsa.pub 文件并复制里面的内容。</p><p>登陆 GitHub ，进入 Settings 页面，选择左边栏的 SSH and GPG keys，点击 New SSH key。</p><p>Title 随便取个名字，粘贴复制的 id_rsa.pub 内容到 Key 中，点击 Add SSH key 完成添加。</p><p>验证连接：</p><p>打开 Git Bash，输入 <code>ssh -T git@github.com</code> 出现 “Are you sure……”，输入 yes 回车确认。</p><p>显示 “Hi xxx! You’ve successfully……” 即连接成功。</p><h1 id="连接-Gitee"><a href="#连接-Gitee" class="headerlink" title="连接 Gitee"></a>连接 Gitee</h1><p>修改根目录_config.yml配置<br>deploy:<br>type: git<br>repo: <a href="https://gitee.com/ptshucn/ptshucn.git">https://gitee.com/ptshucn/ptshucn.git</a> （将地址换成自己的地址）<br>branch: master</p><p>然后在blog的根目录执行命令：</p><p><code>npm install hexo-deployer-git --save</code> # 安装git插件</p><p><code>git config --global user.email zskang@qq.com</code> # 设置gitee邮箱（gitee的注册邮箱）</p><p><code>git config --global user.name ‘ptshucn’</code> # 设置用户名（git的注册昵称）</p><p><code>hexo deploy</code> # 上传到gitee</p><p>然后选择gitee pages服务，然后选择开启 或 更新即可。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;连接-Github&quot;&gt;&lt;a href=&quot;#连接-Github&quot; class=&quot;headerlink&quot; title=&quot;连接 Github&quot;&gt;&lt;/a&gt;连接 Github&lt;/h1&gt;&lt;p&gt;右键 -&amp;gt; &lt;code&gt;Git Bash Here&lt;/code&gt;，设置用户名和邮箱：&lt;br&gt;&lt;code&gt;git config --global user.name &amp;quot;GitHub 用户名&amp;quot;&lt;/code&gt;&lt;br&gt;&lt;code&gt;git config --global user.email &amp;quot;GitHub 邮箱&amp;quot;&lt;/code&gt;&lt;br&gt;创建 SSH 密匙：&lt;br&gt;输入 &lt;code&gt;ssh-keygen -t rsa -C &amp;quot;GitHub 邮箱&amp;quot;&lt;/code&gt;，然后一路回车。&lt;/p&gt;</summary>
    
    
    
    <category term="Git与Hexo" scheme="https://www.ptsh.cf/categories/Git%E4%B8%8EHexo/"/>
    
    
  </entry>
  
  <entry>
    <title>node_modules瘦身方法</title>
    <link href="https://www.ptsh.cf/2022/08/19/node-modules%E7%98%A6%E8%BA%AB%E6%96%B9%E6%B3%95/"/>
    <id>https://www.ptsh.cf/2022/08/19/node-modules%E7%98%A6%E8%BA%AB%E6%96%B9%E6%B3%95/</id>
    <published>2022-08-19T12:25:00.000Z</published>
    <updated>2022-10-13T02:41:35.435Z</updated>
    
    <content type="html"><![CDATA[<p>首先，说明下node_modules文件夹的作用：下载了npm或gulp的一些插件后，打开node_modules可以发现，里面有很多的文件夹，会导致我们将项目拷贝给别人的时候，传输速度会很慢。在拷贝给别人项目的时候，node_modules这个文件夹是不需要一起拷贝的，因为有package.json、package-lock.json。</p><span id="more"></span><p>package.json记录当前项目所依赖模块的版本信息，更新模块时锁定模块的大版本号（版本号的第一位）。package-lock.json记录了node_modules目录下所有模块的具体来源和版本号以及其他的信息，就不做详细讲解了（相信写代码的一看就能大概明白），也可以参考：<a href="https://blog.csdn.net/qq_34295211/article/details/103858589">https://blog.csdn.net/qq_34295211/article/details/103858589</a><br>详细步骤如下：(初次尝试时 请先备份！请先备份！请先备份！)<br>npm install rimraf -g   &#x2F;&#x2F;安装rimraf工具<br>rimraf node_modules     &#x2F;&#x2F;使用rimraf删除node_modules文件<br>npm cache clean –force&#x2F;&#x2F;清除缓存<br>npm config set registry <a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org</a>&#x2F;&#x2F;设置国内镜像，防止下载缓慢卡住<br>npm  install&#x2F;&#x2F;初始化项目</p><p>每次上传项目至服务器备份时，删除node_modules文件夹，要修改项目时再重新初始化项目，安装依赖包。</p><p>另外，npm prune 命令的功能是根据package.json里的依赖项，删除不需要的模块文件。<br>执行npm audit fix，可以查看是否少了什么组件</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;首先，说明下node_modules文件夹的作用：下载了npm或gulp的一些插件后，打开node_modules可以发现，里面有很多的文件夹，会导致我们将项目拷贝给别人的时候，传输速度会很慢。在拷贝给别人项目的时候，node_modules这个文件夹是不需要一起拷贝的，因为有package.json、package-lock.json。&lt;/p&gt;</summary>
    
    
    
    <category term="Git与Hexo" scheme="https://www.ptsh.cf/categories/Git%E4%B8%8EHexo/"/>
    
    
  </entry>
  
  <entry>
    <title>HEXO添加置顶功能</title>
    <link href="https://www.ptsh.cf/2022/08/16/HEXO%E6%B7%BB%E5%8A%A0%E7%BD%AE%E9%A1%B6%E5%8A%9F%E8%83%BD/"/>
    <id>https://www.ptsh.cf/2022/08/16/HEXO%E6%B7%BB%E5%8A%A0%E7%BD%AE%E9%A1%B6%E5%8A%9F%E8%83%BD/</id>
    <published>2022-08-16T12:47:59.000Z</published>
    <updated>2022-10-13T02:40:54.093Z</updated>
    
    <content type="html"><![CDATA[<p>目前已经有修改后支持置顶的仓库，可以直接用以下命令安装。(cmd 到博客根目录，nmp运行)<br>$ npm uninstall hexo-generator-index<br>$ npm install hexo-generator-index-pin-top<br>然后在需要置顶的文章的Front-matter中加上top: true即可。</p><span id="more"></span><h2 id="比如下面这篇文章："><a href="#比如下面这篇文章：" class="headerlink" title="比如下面这篇文章："></a>比如下面这篇文章：</h2><p>title: hexo+GitHub博客搭建实战<br>date: 2017-09-08 12:00:25<br>categories: 博客搭建系列<br>top: true</p><hr><p>到目前为止，置顶功能已经可以实现了。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;目前已经有修改后支持置顶的仓库，可以直接用以下命令安装。(cmd 到博客根目录，nmp运行)&lt;br&gt;$ npm uninstall hexo-generator-index&lt;br&gt;$ npm install hexo-generator-index-pin-top&lt;br&gt;然后在需要置顶的文章的Front-matter中加上top: true即可。&lt;/p&gt;</summary>
    
    
    
    <category term="Git与Hexo" scheme="https://www.ptsh.cf/categories/Git%E4%B8%8EHexo/"/>
    
    
  </entry>
  
  <entry>
    <title>Hexo+Github搭建博客</title>
    <link href="https://www.ptsh.cf/2022/08/08/Hexo+Github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://www.ptsh.cf/2022/08/08/Hexo+Github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</id>
    <published>2022-08-08T12:03:03.000Z</published>
    <updated>2022-10-13T02:44:52.255Z</updated>
    
    <content type="html"><![CDATA[<h1 id="hexo连接github"><a href="#hexo连接github" class="headerlink" title="hexo连接github"></a>hexo连接github</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email &quot;zskang@qq.com&quot;</span><br><span class="line">git config --global user.name &quot;ptshu&quot;</span><br><span class="line">ssh-keygen -t rsa -C &quot;zskang@qq.com&quot;</span><br><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><span id="more"></span><h1 id="使用Hexo-Github搭建博客"><a href="#使用Hexo-Github搭建博客" class="headerlink" title="使用Hexo+Github搭建博客"></a>使用Hexo+Github搭建博客</h1><p>使用 Hexo+GitHub 搭建个人免费博客教程（小白向）<br><a href="https://zhuanlan.zhihu.com/p/60578464">https://zhuanlan.zhihu.com/p/60578464</a></p><h1 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h1><p>使用 npm 一键安装 Hexo 博客程序：<br>npm install -g hexo-cli</p><h1 id="hexo常用命令"><a href="#hexo常用命令" class="headerlink" title="hexo常用命令"></a>hexo常用命令</h1><p>hexo new “name”       # 新建文章<br>hexo new page “name”  # 新建页面<br>hexo g                # 生成页面<br>hexo d                # 部署<br>hexo g -d             # 生成页面并部署<br>hexo s                # 本地预览<br>hexo clean            # 清除缓存和已生成的静态文件<br>hexo help             # 帮助</p><h1 id="文件夹目录说明："><a href="#文件夹目录说明：" class="headerlink" title="文件夹目录说明："></a>文件夹目录说明：</h1><p>node_modules: 依赖包<br>public：存放生成的页面<br>scaffolds：生成文章的一些模板<br>source：用来存放你的文章<br>themes：主题<br>** _config.yml: 博客的配置文件**</p><h1 id="教程2：连接github的命令"><a href="#教程2：连接github的命令" class="headerlink" title="教程2：连接github的命令"></a>教程2：连接github的命令</h1><p>git config –global user.name “ptshu”<br>git config –global user.email “<a href="mailto:&#x7a;&#115;&#107;&#x61;&#x6e;&#103;&#x40;&#x71;&#113;&#46;&#x63;&#111;&#x6d;">&#x7a;&#115;&#107;&#x61;&#x6e;&#103;&#x40;&#x71;&#113;&#46;&#x63;&#111;&#x6d;</a>“<br>输入 ssh-keygen -t rsa -C “<a href="mailto:&#122;&#x73;&#x6b;&#x61;&#x6e;&#103;&#x40;&#x71;&#x71;&#46;&#99;&#x6f;&#109;">&#122;&#x73;&#x6b;&#x61;&#x6e;&#103;&#x40;&#x71;&#x71;&#46;&#99;&#x6f;&#109;</a>“，然后一路回车。<br>添加密匙：<br>进入<code> [C:\Users\用户名\.ssh]</code> 目录（要勾选显示“隐藏的项目”），用记事本打开公钥 id_rsa.pub 文件并复制里面的内容。<br>登陆 GitHub ，进入 Settings 页面，选择左边栏的 SSH and GPG keys，点击 New SSH key。<br>Title 随便取个名字，粘贴复制的 id_rsa.pub 内容到 Key 中，点击 Add SSH key 完成添加。<br>验证连接：<br>打开 Git Bash，输入 <code>ssh -T git@github.com</code> 出现 “Are you sure……”，输入 yes 回车确认。<br>显示 “Hi xxx! You’ve successfully……” 即连接成功。</p><h1 id="报错信息"><a href="#报错信息" class="headerlink" title="报错信息"></a>报错信息</h1><p>hexo YAMLException: can not read a block mapping entry; a multiline key may not be an implicit key<br>报错信息是提示hexo的yml配置文件 冒号后面少了空格<br>解决方案：到提示行将对应的空格补上即可<br><a href="https://blog.csdn.net/qq_39026548/article/details/104729964">https://blog.csdn.net/qq_39026548/article/details/104729964</a></p><h1 id="教程3：添加分类及标签"><a href="#教程3：添加分类及标签" class="headerlink" title="教程3：添加分类及标签"></a>教程3：添加分类及标签</h1><p>Hexo使用攻略-添加分类及标签<br><a href="https://www.jianshu.com/p/e17711e44e00">https://www.jianshu.com/p/e17711e44e00</a></p><h1 id="首字母大小写而-404"><a href="#首字母大小写而-404" class="headerlink" title="首字母大小写而 404"></a>首字母大小写而 404</h1><p>Hexo 改变 tag 因为大小写问题而 404 的解决方法<br><a href="https://blog.zhheo.com/p/5511910d.html">https://blog.zhheo.com/p/5511910d.html</a><br>hexo d 上传后about首字母变大写的原因：第一次上传时是大写，覆盖上传还就按第一次的大写写入。解决方法：把文件夹about重命名为其他（如：about2），hexo d 上传，然后再重命名回about，再hexo d 上传就完美解决了。</p><h1 id="评论系统-Valine"><a href="#评论系统-Valine" class="headerlink" title="评论系统-Valine"></a>评论系统-Valine</h1><p>为你的Hexo加上评论系统-Valine<br><a href="https://blog.csdn.net/blue_zy/article/details/79071414">https://blog.csdn.net/blue_zy/article/details/79071414</a></p><h1 id="REMOTE-REJECTED-MASTER"><a href="#REMOTE-REJECTED-MASTER" class="headerlink" title="[REMOTE REJECTED] MASTER"></a>[REMOTE REJECTED] MASTER</h1><p>GIT PULL 错误：[REMOTE REJECTED] MASTER -&gt; MASTER (PRE-RECEIVE HOOK DECLINED)<br>解决办法：关闭分支的保护机制<br><a href="https://www.freesion.com/article/7986556587/">https://www.freesion.com/article/7986556587/</a></p><h1 id="博客菜单显示中文的设置方法："><a href="#博客菜单显示中文的设置方法：" class="headerlink" title="博客菜单显示中文的设置方法："></a>博客菜单显示中文的设置方法：</h1><p>1、在博客根目录的_config.yml文件中，找到language项改为zh-CN。<br>2、主题目录的_config.yml文件中，找到language项改为zh-CN。<br>注：部分主题的_config.yml文件中没有language项的设置。</p><h1 id="怎么用键盘敲出反引号"><a href="#怎么用键盘敲出反引号" class="headerlink" title="怎么用键盘敲出反引号"></a>怎么用键盘敲出反引号</h1><p>切换到英文输入法模式下,找到电脑键盘 Esc 下面的键,敲两下就出现了反引号.</p><h1 id="手把手教会你使用Markdown【从入门到精通一篇就够了】"><a href="#手把手教会你使用Markdown【从入门到精通一篇就够了】" class="headerlink" title="手把手教会你使用Markdown【从入门到精通一篇就够了】"></a>手把手教会你使用Markdown【从入门到精通一篇就够了】</h1><p><a href="https://blog.csdn.net/qq_40818172/article/details/126260661?spm=1001.2101.3001.6650.3&amp;utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-3-126260661-blog-50911365.pc_relevant_default&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-3-126260661-blog-50911365.pc_relevant_default&amp;utm_relevant_index=6">https://blog.csdn.net/qq_40818172/article/details/126260661?spm=1001.2101.3001.6650.3&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-3-126260661-blog-50911365.pc_relevant_default&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-3-126260661-blog-50911365.pc_relevant_default&amp;utm_relevant_index=6</a></p><h1 id="Hexo-中文文档"><a href="#Hexo-中文文档" class="headerlink" title="Hexo 中文文档"></a>Hexo 中文文档</h1><p><a href="https://www.w3cschool.cn/hexodocument/">https://www.w3cschool.cn/hexodocument/</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;hexo连接github&quot;&gt;&lt;a href=&quot;#hexo连接github&quot; class=&quot;headerlink&quot; title=&quot;hexo连接github&quot;&gt;&lt;/a&gt;hexo连接github&lt;/h1&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git config --global user.email &amp;quot;zskang@qq.com&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git config --global user.name &amp;quot;ptshu&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ssh-keygen -t rsa -C &amp;quot;zskang@qq.com&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ssh -T git@github.com&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Git与Hexo" scheme="https://www.ptsh.cf/categories/Git%E4%B8%8EHexo/"/>
    
    
    <category term="Hexo" scheme="https://www.ptsh.cf/tags/Hexo/"/>
    
    <category term="Github" scheme="https://www.ptsh.cf/tags/Github/"/>
    
    <category term="搭建" scheme="https://www.ptsh.cf/tags/%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>菩提记事本</title>
    <link href="https://www.ptsh.cf/2022/08/07/%E8%8F%A9%E6%8F%90%E8%AE%B0%E4%BA%8B%E6%9C%AC/"/>
    <id>https://www.ptsh.cf/2022/08/07/%E8%8F%A9%E6%8F%90%E8%AE%B0%E4%BA%8B%E6%9C%AC/</id>
    <published>2022-08-07T11:58:41.000Z</published>
    <updated>2022-10-13T03:31:33.071Z</updated>
    
    <content type="html"><![CDATA[<h1 id="我的代码托管"><a href="#我的代码托管" class="headerlink" title="我的代码托管"></a>我的代码托管</h1><p>博客（hexo）：<a href="https://github.com/ptshu/ptshu.github.io">https://github.com/ptshu/ptshu.github.io</a> (<a href="http://www.ptsh.cf/">www.ptsh.cf</a>)<br>音乐  （yy）：<a href="https://gitee.com/ptsh/ptsh/">https://gitee.com/ptsh/ptsh/</a> (<a href="http://ptsh.gitee.io/">http://ptsh.gitee.io/</a>)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email &quot;zskang@qq.com&quot;</span><br><span class="line">git config --global user.name &quot;ptshu&quot;</span><br><span class="line">ssh-keygen -t rsa -C &quot;zskang@qq.com&quot;</span><br><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><span id="more"></span><h1 id="Hexo-Github搭建博客"><a href="#Hexo-Github搭建博客" class="headerlink" title="Hexo+Github搭建博客"></a>Hexo+Github搭建博客</h1><p><a href="https://www.ptsh.cf/2022/08/08/Hexo+Github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/">https://www.ptsh.cf/2022/08/08/Hexo+Github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</a><br>下载：hexo(加环境).zip<br><a href="https://zsk.lanzouy.com/iPtsH0draych">https://zsk.lanzouy.com/iPtsH0draych</a></p><h1 id="git常用命令"><a href="#git常用命令" class="headerlink" title="git常用命令"></a>git常用命令</h1><p><a href="https://www.ptsh.cf/2022/09/29/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/">https://www.ptsh.cf/2022/09/29/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;我的代码托管&quot;&gt;&lt;a href=&quot;#我的代码托管&quot; class=&quot;headerlink&quot; title=&quot;我的代码托管&quot;&gt;&lt;/a&gt;我的代码托管&lt;/h1&gt;&lt;p&gt;博客（hexo）：&lt;a href=&quot;https://github.com/ptshu/ptshu.github.io&quot;&gt;https://github.com/ptshu/ptshu.github.io&lt;/a&gt; (&lt;a href=&quot;http://www.ptsh.cf/&quot;&gt;www.ptsh.cf&lt;/a&gt;)&lt;br&gt;音乐  （yy）：&lt;a href=&quot;https://gitee.com/ptsh/ptsh/&quot;&gt;https://gitee.com/ptsh/ptsh/&lt;/a&gt; (&lt;a href=&quot;http://ptsh.gitee.io/&quot;&gt;http://ptsh.gitee.io/&lt;/a&gt;)&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git config --global user.email &amp;quot;zskang@qq.com&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git config --global user.name &amp;quot;ptshu&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ssh-keygen -t rsa -C &amp;quot;zskang@qq.com&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ssh -T git@github.com&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="智能网络" scheme="https://www.ptsh.cf/categories/%E6%99%BA%E8%83%BD%E7%BD%91%E7%BB%9C/"/>
    
    
  </entry>
  
</feed>
