{"meta":{"title":"菩提树","subtitle":"ptsh.gitee.io","description":"菩提的个人小站","author":"菩提","url":"https://ptsh.gitee.io","root":"/"},"pages":[{"title":"categories","date":"2017-05-27T05:47:40.000Z","updated":"2022-12-01T08:06:40.599Z","comments":true,"path":"categories/index.html","permalink":"https://ptsh.gitee.io/categories/index.html","excerpt":"","text":""},{"title":"作者简介","date":"2022-08-13T15:32:03.000Z","updated":"2022-12-11T12:15:48.788Z","comments":true,"path":"about/index.html","permalink":"https://ptsh.gitee.io/about/index.html","excerpt":"","text":""},{"title":"tags","date":"2022-08-13T15:10:59.000Z","updated":"2022-12-01T08:06:40.599Z","comments":true,"path":"tags/index.html","permalink":"https://ptsh.gitee.io/tags/index.html","excerpt":"","text":"标签列表"},{"title":"guestbook","date":"2022-08-13T15:39:11.000Z","updated":"2022-12-01T08:06:40.599Z","comments":true,"path":"guestbook/index.html","permalink":"https://ptsh.gitee.io/guestbook/index.html","excerpt":"","text":""}],"posts":[{"title":"部署Gitee的Git和Hexo","slug":"部署Gitee的Git和Hexo","date":"2023-10-29T11:58:41.000Z","updated":"2023-11-02T03:32:45.750Z","comments":false,"path":"2023/10/29/部署Gitee的Git和Hexo/","link":"","permalink":"https://ptsh.gitee.io/2023/10/29/%E9%83%A8%E7%BD%B2Gitee%E7%9A%84Git%E5%92%8CHexo/","excerpt":"HEXO博客信息博客仓库：https://gitee.com/ptsh/ptsh/备份仓库：https://gitee.com/ptsh/hexo/博客域名：https://ptsh.gitee.io","text":"HEXO博客信息博客仓库：https://gitee.com/ptsh/ptsh/备份仓库：https://gitee.com/ptsh/hexo/博客域名：https://ptsh.gitee.io 部署Gitee的Git和Hexo第一步：下载安装gitGit下载链接：https://www.git-scm.com/download/安装时选择哪些选项，建议百度，或者照着视频安装。码云官网:https://gitee.com/ 第二步：生成ssh公钥&#x2F;私钥对。 （1）先查看之前是否已经生成过公钥，私钥对。打开文件夹 ： C:\\Users\\用户名.ssh 如果有上面三个文件，说明已经生成过。则不需要再生成。不需执行下面的步骤。可直接从下面的第（4）小步操作。 （2）配置Git的用户名，邮箱名。（注意这里的配置是对Git软件的配置只配置一次即可，第四步的远程仓库是对每个本地仓库的配置，也就是每创建一个git本地仓库都要配置） 123456git config --global user.name &quot;用户名（最好是gitee的用户名）&quot;git config --global user.email &quot;邮箱（gitee注册的邮箱）&quot;然后执行下面命令，查看是否配置成功git config --list出现配置的结果成功。注意：按字母键（Q）退出git config --list （3）执行生成密钥对命令。ssh-keygen -t rsa -C &quot;邮箱&quot; 执行命令，并按回车3下（有提示你是否需要设置密码，所以直接回车跳过，如果设置了每次使用Git会提示输入密码）然后去C:\\Users\\用户名.ssh文件夹下会有这三个文件 （4）打开id_rsa.pub的公钥文件，复制里面的内容 （5）打开Gitee的个人设置界面，点击左下方的ssh公钥：粘贴公钥，填写标题，点击确定。 ssh登录整个详细过程介绍，可参考：https://www.jianshu.com/p/a3c3628d710bhttps://www.jianshu.com/p/9998d4d3ba04https://blog.csdn.net/qq_23167527/article/details/80614454https://blog.csdn.net/weixin_42201180/article/details/117809437 第三步：使用git推送到远程库。 （1）在gitee创建仓库 然后，按如下方式创建仓库： （2）在当前工作目录打开cmd，初始化为git本地库。这个工作目录是要推送的文件所在的文件夹。使用命令(注意有个 .)： git init . (3)使用命令查看本地仓库git是否配置过远程仓库。 git remote -v （4）没有配置过远程仓库。打开上面Gitee创建的仓库，按照下图复制ssh地址。 然后，在cmd控制台添加远程仓库命令 1234567git remote add origin &lt;你的项目地址&gt; //注:项目地址形式为:https://gitee.com/xxx/xxx.git或者 git@gitee.com:xxx/xxx.git已存在远程仓库，则修改远程仓库命令git remote set-url origin &lt;你的项目地址&gt;git remote set-url origin git@gitee.com:ptsh/hexo.git（项目ptsh存放hexo 博客，项目ptshucn存放hexo 源文件） （5）最后就是基本的推送命令了。 12345git add .git commit -m &quot;第一次提交&quot;git push origin master 直接执行push命令会出问题： 因为gitee创建的和本地的不是同一个库，所以冲突。如果使用git clone不会出这个问题。可使用下面的命令解决： git pull origin master --allow-unrelated-histories 然后再执行push命令： git push origin master 这时执行上面push命令 如果还报错： 则再将本地的文件提交到本地仓库，再到远程仓库，即(orgin是添加在git 的远程仓库名， master是远程仓库当当前所在的分支）： 1234git add .git commit -m “ptshucn”git pull origin master --allow-unrelated-historiesgit push origin master 部署Hexo到Gitee修改根目录_config.yml配置 1234deploy:type: gitrepo: git@gitee.com:ptsh/hexo.git （将地址换成自己的地址）branch: master 然后在blog的根目录执行命令： 1234567npm install hexo-deployer-git –save # 安装git插件git config –global user.email zskang@qq.com # 设置gitee邮箱（gitee的注册邮箱）git config –global user.name ‘ptsh’ # 设置用户名（git的注册昵称）hexo deploy # 上传到gitee 然后选择gitee pages服务，然后选择开启 或 更新即可。 网络教程：使用 Hexo+GitHub 搭建个人免费博客教程（小白向）https://zhuanlan.zhihu.com/p/60578464 hexo常用命令12345678hexo new &quot;name&quot; # 新建文章hexo new page &quot;name&quot; # 新建页面hexo g # 生成页面hexo d # 部署hexo g -d # 生成页面并部署hexo s # 本地预览hexo clean # 清除缓存和已生成的静态文件hexo help # 帮助","categories":[{"name":"hexo","slug":"hexo","permalink":"https://ptsh.gitee.io/categories/hexo/"},{"name":"Gitee","slug":"hexo/Gitee","permalink":"https://ptsh.gitee.io/categories/hexo/Gitee/"}],"tags":[]},{"title":"MarkDown使用心得","slug":"MarkDown使用心得","date":"2023-10-02T03:22:53.000Z","updated":"2023-11-02T03:23:26.030Z","comments":true,"path":"2023/10/02/MarkDown使用心得/","link":"","permalink":"https://ptsh.gitee.io/2023/10/02/MarkDown%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/","excerpt":"MarkDown语法：标题：在md格式下使用”#”来标记标题 ，有N个#时表示N级标题,N最大为6。（#后需要接一个空格） 段落说明：段落直接编写文字，没有特殊格式。段落的换行是使用两个以上空格加上回车。段落后面使用一个空行来表示重新开始一个段落。","text":"MarkDown语法：标题：在md格式下使用”#”来标记标题 ，有N个#时表示N级标题,N最大为6。（#后需要接一个空格） 段落说明：段落直接编写文字，没有特殊格式。段落的换行是使用两个以上空格加上回车。段落后面使用一个空行来表示重新开始一个段落。 图片语法格式：![alt 属性文本](图片地址)或![alt 属性文本](图片地址 &quot;可选标题&quot;) 链接：[链接名称](链接地址) 或 &lt;链接地址&gt;菩提树http://ptshu.cn/ 代码区块：一行代码1个反引号表示多行代码3个反引号表示 转义：使用反斜杠转义特殊字符，如：\\*\\* 正常显示星号 \\*\\* 分隔线：可以在一行中用三个以上的星号、减号、底线来建立分隔线，行内不能有其他东西，也可以在星号或减号中间插入空格。","categories":[{"name":"MarkDown","slug":"MarkDown","permalink":"https://ptsh.gitee.io/categories/MarkDown/"}],"tags":[]},{"title":"Hexo使用心得","slug":"Hexo使用心得","date":"2022-12-11T12:54:53.000Z","updated":"2023-11-02T03:20:50.417Z","comments":true,"path":"2022/12/11/Hexo使用心得/","link":"","permalink":"https://ptsh.gitee.io/2022/12/11/Hexo%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/","excerpt":"hexo常用命令hexo new “name” # 新建文章hexo new page “name” # 新建页面hexo g # 生成页面hexo d # 部署hexo g -d # 生成页面并部署hexo s # 本地预览hexo clean # 清除缓存和已生成的静态文件hexo help # 帮助","text":"hexo常用命令hexo new “name” # 新建文章hexo new page “name” # 新建页面hexo g # 生成页面hexo d # 部署hexo g -d # 生成页面并部署hexo s # 本地预览hexo clean # 清除缓存和已生成的静态文件hexo help # 帮助 文件夹目录说明：node_modules: 依赖包public：存放生成的页面scaffolds：生成文章的一些模板source：用来存放你的文章themes：主题文件_config.yml: 博客的配置文件 博客菜单显示中文的设置方法：1、在博客根目录的_config.yml文件中，找到language项改为zh-CN。2、主题目录的_config.yml文件中，找到language项改为zh-CN。注：部分主题的_config.yml文件中没有language项的设置。 Hexo与Github的网络教程使用 Hexo+GitHub 搭建个人免费博客教程（小白向）https://zhuanlan.zhihu.com/p/605784645分钟快速 搭建免费好用的图床（Picx +github）https://blog.csdn.net/weixin_45701199/article/details/125801816 报错信息hexo YAMLException: can not read a block mapping entry; a multiline key may not be an implicit key报错信息是提示hexo的yml配置文件 冒号后面少了空格解决方案：到提示行将对应的空格补上即可https://blog.csdn.net/qq_39026548/article/details/104729964 Hexo使用攻略-添加分类及标签https://www.jianshu.com/p/e17711e44e00 Hexo 改变 tag 因为大小写问题而 404 的解决方法https://blog.zhheo.com/p/5511910d.htmlhexo d 上传后about首字母变大写的原因：第一次上传时是大写，覆盖上传还就按第一次的大写写入。解决方法：把文件夹about重命名为其他（如：about2），hexo d 上传，然后再重命名回about，再hexo d 上传就完美解决了。 为你的Hexo加上评论系统-Valinehttps://blog.csdn.net/blue_zy/article/details/79071414 GIT PULL 错误：[REMOTE REJECTED] MASTER -&gt; MASTER (PRE-RECEIVE HOOK DECLINED)解决办法：关闭分支的保护机制https://www.freesion.com/article/7986556587/ HEXO添加置顶功能目前已经有修改后支持置顶的仓库，可以直接用以下命令安装。(cmd 到博客根目录，nmp运行)$ npm uninstall hexo-generator-index$ npm install hexo-generator-index-pin-top然后在需要置顶的文章的Front-matter中加上top: true即可。 比如下面这篇文章：title: hexo+GitHub博客搭建实战date: 2017-09-08 12:00:25categories: 博客搭建系列top: true 到目前为止，置顶功能已经可以实现了。 node_modules瘦身方法首先，说明下node_modules文件夹的作用：下载了npm或gulp的一些插件后，打开node_modules可以发现，里面有很多的文件夹，会导致我们将项目拷贝给别人的时候，传输速度会很慢。在拷贝给别人项目的时候，node_modules这个文件夹是不需要一起拷贝的，因为有package.json、package-lock.json。package.json记录当前项目所依赖模块的版本信息，更新模块时锁定模块的大版本号（版本号的第一位）。package-lock.json记录了node_modules目录下所有模块的具体来源和版本号以及其他的信息，就不做详细讲解了（相信写代码的一看就能大概明白），也可以参考：https://blog.csdn.net/qq_34295211/article/details/103858589详细步骤如下：(初次尝试时 请先备份！请先备份！请先备份！)npm install rimraf -g &#x2F;&#x2F;安装rimraf工具rimraf node_modules &#x2F;&#x2F;使用rimraf删除node_modules文件npm cache clean –force &#x2F;&#x2F;清除缓存npm config set registry https://registry.npm.taobao.org &#x2F;&#x2F;设置国内镜像，防止下载缓慢卡住npm install &#x2F;&#x2F;初始化项目 每次上传项目至服务器备份时，删除node_modules文件夹，要修改项目时再重新初始化项目，安装依赖包。 另外，npm prune 命令的功能是根据package.json里的依赖项，删除不需要的模块文件。执行npm audit fix，可以查看是否少了什么组件 极狐GitLab与GitLab的区别一、产品方面GitLab 在全球范围内有三个版本：社区版（CE）、企业版（EE）、极狐版 (JH)。极狐GitLab（极狐版JH）是在中国大陆和港澳地区发行的企业级GitLab版本，拥有GitLab技术和品牌独家授权，基于GitLab EE和极狐(GitLab)持有独立知识产权的——JH代码仓库构建，由极狐(GitLab)公司在国内独立运营。极狐GitLab支持私有化部署（self-managed）版本和SaaS服务。极狐GitLab的企业级订阅许可证、源代码管理、支付系统等均在中国境内管理，受中国法律保护。二、代码及仓库管理方面极狐(GitLab)公司与GitLab公司使用两个独立的代码仓，极狐(GitLab)的代码仓存放在中国境内。GitLab社区版（CE）和企业版（EE）的更改将单向镜像到极狐发行版——极狐GitLab（JH），极狐GitLab版本的更改则会以社区贡献的形式反哺，通过GitLab维护者的审批后合并到GitLab。三、SaaS 服务方面极狐GitLab的SaaS服务和GitLab Inc.的SaaS服务（GitLab.com）不共享任何基础设施、网络连接、系统、服务、数据或资源。极狐(GitLab)作为一家独立的中国公司，将在国内管理自己的技术和基础设施。 解决需要输入git(或者hexo)的用户名和密码原因：是因为用 https 协议进行本地仓库和远程仓库的连接，https协议每次都需要进行用户验证，如下修改解决问题，换成ssh方式：把https://gitee.com/ptsh/ptsh.git改成&#103;&#x69;&#116;&#64;&#x67;&#105;&#116;&#x65;&#x65;&#x2e;&#x63;&#111;&#x6d;:ptsh&#x2F;hexo.gitgit:在cmd控制台添加或者修改远程仓库命令添加：git remote add origin &#x67;&#105;&#116;&#x40;&#x67;&#105;&#116;&#x65;&#101;&#46;&#x63;&#111;&#x6d;:ptsh&#x2F;hexo.git修改：git remote set-url origin &#x67;&#105;&#x74;&#x40;&#103;&#x69;&#116;&#x65;&#x65;&#46;&#x63;&#111;&#x6d;:ptsh&#x2F;hexo.githexo:修改根目录_config.yml配置 deploy: type: git repo: &#x67;&#105;&#x74;&#64;&#103;&#x69;&#x74;&#101;&#x65;&#x2e;&#99;&#x6f;&#109;:ptsh&#x2F;hexo.git （将地址换成自己的地址） branch: master 更改完远程仓库链接，第一次使用Git的clone或者push命令连接Gitee时，会得到一个警告。这是因为Git使用SSH连接，而SSH连接在第一次验证Gitee服务器的Key时，需要你确认Gitee的Key的指纹信息是否真的来自Gitee的服务器，输入yes回车即可。Git会输出一个警告，告诉你已经把Gitee的Key添加到本机的一个信任列表里了：这个警告只会出现一次，后面的操作就不会有任何警告了。 Valine禁止某页面评论在 Hexo 博客中，评论的功能在所有页面都默认开启，但是有的时候我们在页面上不需要显示评论功能，例如分类，标记页面我们并不需要评论功能。通过comments属性设置true或false控制该页面或者是文章的评论功能是否打开，如下：title: Tagsdate: 2019-12-19 16:10:19type: “tags”comments: false 使用git add 报错提示错误信息(warning)，报错： warning: LF will be replaced by CRLF in.idea&#x2F;inspectionProfiles&#x2F;profiles_settings.xml. The file will have its original line endings in your working directory解决方法：执行git add . 命令之前先执行 以下命令，可成功解决git config core.autocrlf 静态HTML网页部署到github&#x2F;gitee后中文乱码解决方法如下：1、将html文件用记事本方式打开2、html设置编码utf8的方法：首先打开HTML文件；然后在head之间添加语句&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;即可。3、点击另存为，跳出另存为界面，最下方有编码选项，选择“UTF-8”，将html文件保存（或直接存为原文件后选替换）","categories":[{"name":"hexo","slug":"hexo","permalink":"https://ptsh.gitee.io/categories/hexo/"},{"name":"Git","slug":"hexo/Git","permalink":"https://ptsh.gitee.io/categories/hexo/Git/"}],"tags":[]},{"title":"使用Hexo+GitHub搭建博客（问题）","slug":"使用Hexo+GitHub搭建博客（问题）","date":"2022-12-02T11:58:41.000Z","updated":"2023-11-02T11:46:35.301Z","comments":true,"path":"2022/12/02/使用Hexo+GitHub搭建博客（问题）/","link":"","permalink":"https://ptsh.gitee.io/2022/12/02/%E4%BD%BF%E7%94%A8Hexo+GitHub%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E9%97%AE%E9%A2%98%EF%BC%89/","excerpt":"HEXO博客信息博客仓库名：ptshu.github.io备份仓库名：hexo管理地址：https://github.com/ptshu/ Hexo连接 Github(博客)","text":"HEXO博客信息博客仓库名：ptshu.github.io备份仓库名：hexo管理地址：https://github.com/ptshu/ Hexo连接 Github(博客) 设置用户名和邮箱： 12git config --global user.name &quot;ptshu&quot;git config --global user.email &quot;zskang@qq.com&quot; 创建 SSH 密匙：(如果已经创建了，可以跳过直接用户旧的密匙)ssh-keygen -t rsa -C &quot;zskang@qq.com&quot;验证连接：ssh -T git@github.com Git连接 Github(备份)设置用户名、邮箱和仓库： 1234567git config --global user.name &quot;ptshu&quot;git config --global user.email &quot;zskang@qq.com&quot;第一次关联仓库git remote add origin https://ghp_YtdiutIzUSJw1aBftZmD和谐一下TGBQROg3Rh3pLH24@github.com/ptshu/hexo.git或修改关联仓库git remote set-url origin https://ghp_YtdiutIzUSJw1aBftZmD和谐一下TGBQROg3Rh3pLH24@github.com/ptshu/hexo.git 上传命令： 1234git add .git commit -m &quot;新备份&quot;git pull --rebase origin master //本地与远程版本不一致（如远程上删减或修改文件），需要先用此命令合并git push origin master 其他常用命令：查看当前git的配置git config -l github用户申请专属token(个人令牌)123456Settings =&gt; Developer Settings =&gt; Personal access tokens如：git-to-hexo@tokenghp_YtdiutIzUSJw1aBftZmD和谐一下TGBQROg3Rh3pLH24picx@tokenghp_ObXvJO6jrjhHcMhI和谐一下Ug8UeT9y210ZJN3O2sPM Github添加密匙：进入 [C:\\Users\\用户名.ssh] 目录（要勾选显示“隐藏的项目”），用记事本打开公钥 id_rsa.pub 文件并复制里面的内容。 登陆 GitHub ，进入 Settings 页面，选择左边栏的 SSH and GPG keys，点击 New SSH key。 Title 随便取个名字，粘贴复制的 id_rsa.pub 内容到 Key 中，点击 Add SSH key 完成添加。 验证连接： 打开 Git Bash，输入 ssh -T git@github.com 出现 “Are you sure……”，输入 yes 回车确认。 显示 “Hi xxx! You’ve successfully……” 即连接成功。","categories":[{"name":"hexo","slug":"hexo","permalink":"https://ptsh.gitee.io/categories/hexo/"},{"name":"GitHub","slug":"hexo/GitHub","permalink":"https://ptsh.gitee.io/categories/hexo/GitHub/"}],"tags":[]}],"categories":[{"name":"hexo","slug":"hexo","permalink":"https://ptsh.gitee.io/categories/hexo/"},{"name":"Gitee","slug":"hexo/Gitee","permalink":"https://ptsh.gitee.io/categories/hexo/Gitee/"},{"name":"MarkDown","slug":"MarkDown","permalink":"https://ptsh.gitee.io/categories/MarkDown/"},{"name":"Git","slug":"hexo/Git","permalink":"https://ptsh.gitee.io/categories/hexo/Git/"},{"name":"GitHub","slug":"hexo/GitHub","permalink":"https://ptsh.gitee.io/categories/hexo/GitHub/"}],"tags":[]}